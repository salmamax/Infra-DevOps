version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      target: development  # Usa la etapa de desarrollo del Dockerfile
    container_name: angular_dev
    ports:
      - "4200:4200"  # Angular Dev Server
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Evita sobrescritura
    networks:
      - devnet
    environment:
      - NODE_ENV=development
      - API_URL=http://localhost/api  # Para desarrollo local

  backend:
    build:
      context: ./docker/php  # Asegúrate de tener el Dockerfile para PHP/Symfony
    container_name: symfony_dev
    volumes:
      - ./backend:/var/www/html
    environment:
      - APP_ENV=dev
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
    depends_on:
      - mysql
    networks:
      - devnet

  mysql:
    image: ${MYSQL_IMAGE:-mysql:8.0}
    container_name: mysql_dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"  # Exponer solo para desarrollo (opcional)
    networks:
      - devnet

  nginx:
    image: nginx:1.25
    container_name: nginx_dev
    ports:
      - "8080:80"  # Proxy para desarrollo (opcional)
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf  # Config específica para dev
    depends_on:
      - backend
    networks:
      - devnet

volumes:
  mysql_data_dev:

networks:
  devnet:
    driver: bridge
